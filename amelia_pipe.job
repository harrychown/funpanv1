#!/bin/bash --login
#$ -cwd
#$ -pe smp.pe 6 
#$ -t 1-267
#$ -N zamelia
module load apps/binapps/anaconda3/2021.11
module load tools/env/proxy2 
module load apps/bioinf
module load apps/binapps/gatk/4.1.8.0
module load apps/samtools/1.4/gcc-4.8.5
module load apps/gcc/R/4.1.2 
# 1-267

PREFIX=`awk "NR==$SGE_TASK_ID" found.list`

### PANGENOME GENERATION PIPELINE FOR HPC ###
READ1=./initial_seq/${PREFIX}_1.fastq
READ2=./initial_seq/${PREFIX}_2.fastq


mkdir $PREFIX

### READ QC ###
conda activate imperial
trimmomatic PE -threads $NSLOTS ./${READ1} ./${READ2} \
		${PREFIX}/${PREFIX}_1_qc.fastq ${PREFIX}/${PREFIX}_1_unqc.fastq \
		${PREFIX}/${PREFIX}_2_qc.fastq ${PREFIX}/${PREFIX}_2_unqc.fastq \
		ILLUMINACLIP:/mnt/iusers01/pb01/f99731hc/TruSeq3-PE.fa:2:40:15 TOPHRED33 LEADING:20 \
		TRAILING:20 SLIDINGWINDOW:2:20 MINLEN:25 \
		AVGQUAL:20
		
### ALIGN TO REF ###
# Function to align reference
alignREF() {
	conda activate persist_env
	if [ ! -e $REF.pac ]
	then
		bwa index $REF
	fi
	bwa mem -t $NSLOTS $REF ${PREFIX}/${PREFIX}_1_qc.fastq ${PREFIX}/${PREFIX}_2_qc.fastq > ${PREFIX}/$PREFIX.$REF_PREFIX.sam

	### VARIANT CALL ###
	# Convert SAM to BAM
	samtools view -S -b ${PREFIX}/$PREFIX.$REF_PREFIX.sam > ${PREFIX}/$PREFIX.$REF_PREFIX.bam
	# Sort BAM file
	samtools sort ${PREFIX}/$PREFIX.$REF_PREFIX.bam -o ${PREFIX}/$PREFIX.$REF_PREFIX.sorted.bam

	### ALIGNMENT QC ###
	# Picard - Duplicated reads
	module load apps/picard/2.1.0/bin
	picard MarkDuplicates I=${PREFIX}/$PREFIX.$REF_PREFIX.sorted.bam O=${PREFIX}/$PREFIX.$REF_PREFIX.marked_duplicates.bam M=${PREFIX}/$PREFIX.$REF_PREFIX.marked_dup_metrics.txt


  	# QualiMap - GC content and coverage
  	module load apps/gcc/R/4.1.2 
  	mkdir ./$PREFIX/qualimap_$REF_PREFIX
  	/mnt/iusers01/pb01/f99731hc/qualimap_v2.2.1/qualimap bamqc -nt $NSLOTS -bam ./$PREFIX/$PREFIX.$REF_PREFIX.sorted.bam -outdir ./$PREFIX/qualimap_$REF_PREFIX

  
 	# Check if dictionary needs to be generated
	DICT_PREFIX=$(echo $REF | rev | cut -d"." | rev)
  	if [ ! -e $DICT_PREFIX.dict ]
	then
		picard CreateSequenceDictionary R=$REF O=$DICT_PREFIX.dict 
	fi



	# Check if FASTA index needs to be generated
  	if [ ! -e $REF.fai ]
	then
		samtools faidx $REF
	fi

	### VARIANT CALL ###
	# Add groups for sorted BAM file
	gatk --java-options "-Xmx4G" AddOrReplaceReadGroups \
	       -I ${PREFIX}/$PREFIX.$REF_PREFIX.sorted.bam \
	       -O ${PREFIX}/$PREFIX.$REF_PREFIX.grouped.bam \
	       --RGID 4 \
	       --RGLB lib1 \
	       --RGPL ILLUMINA \
	       --RGPU unit1 \
	       --RGSM 20
	# Index the sorted BAM file
	samtools index ${PREFIX}/$PREFIX.$REF_PREFIX.grouped.bam

	# Run GATK
	gatk --java-options "-Xmx4G" HaplotypeCaller \
	    -R $REF \
	    -I ${PREFIX}/$PREFIX.$REF_PREFIX.grouped.bam \
	    -O ${PREFIX}/$PREFIX.$REF_PREFIX.vcf
	    
	gatk --java-options "-Xmx4G" VariantFiltration \
		-R $REF \
		-V ${PREFIX}/$PREFIX.$REF_PREFIX.vcf \
		-O ${PREFIX}/$PREFIX.filt1.$REF_PREFIX.vcf \
		--filter-name "LowConf" \
		--filter-expression "DP < 10 || MQ < 40.0 || QD < 2.0 || FS > 60.0 || ABHom < 0.9"
	awk 'BEGIN { FS = ":" } ;  $8 > 50' ${PREFIX}/$PREFIX.filt1.$REF_PREFIX.vcf  > ${PREFIX}/$PREFIX.filt2.$REF_PREFIX.vcf 
	awk 'BEGIN{FS=OFS="\t"} $7=="LowConf"{gsub(/[[:alnum:]]|*/,"N",$5)} 1' ${PREFIX}/$PREFIX.filt2.$REF_PREFIX.vcf > ${PREFIX}/$PREFIX.filt3.$REF_PREFIX.vcf
	grep -v LowConf ${PREFIX}/$PREFIX.filt3.$REF_PREFIX.vcf > ${PREFIX}/$PREFIX.finalfilt.$REF_PREFIX.vcf



}
# Align against two references (Af293, CEA10)
REF=GCF_000002655.1_ASM265v1_genomic.masked.fa
REF_PREFIX=af293
alignREF

REF=CEA10PILON3.fasta
REF_PREFIX=cea10
alignREF
: <<'END'
### ASSEMBLE ###
conda activate spades_env
mkdir ${PREFIX}/spades/
spades.py -1 ${PREFIX}/${PREFIX}_1_qc.fastq -2 ${PREFIX}/${PREFIX}_2_qc.fastq -o ${PREFIX}/spades/ -t $NSLOTS --careful


### ALIGN TO SELF ###
conda activate persist_env
REF="${PREFIX}/spades/contigs.fasta" 
if [ ! -e $REF.pac ]
then
	bwa index $REF
fi
bwa mem -t $NSLOTS $REF ${PREFIX}/${PREFIX}_1_qc.fastq ${PREFIX}/${PREFIX}_2_qc.fastq > ${PREFIX}/$PREFIX.self.sam
# Convert SAM to BAM
samtools view -S -b ${PREFIX}/$PREFIX.self.sam > ${PREFIX}/$PREFIX.self.bam
# Sort BAM file
samtools sort ${PREFIX}/$PREFIX.self.bam -o ${PREFIX}/$PREFIX.self.sorted.bam


samtools index ${PREFIX}/$PREFIX.self.sorted.bam 

### POLISH ###
conda activate pilon_env
mkdir ${PREFIX}/pilon/
pilon --genome ${PREFIX}/spades/contigs.fasta --frags ${PREFIX}/$PREFIX.self.sorted.bam -Xmx4g --output $PREFIX --outdir ${PREFIX}/pilon/ --threads $NSLOTS --changes

### SCAFFOLD ###
conda activate ragtag_env
ragtag.py scaffold CEA10PILON3.fasta ${PREFIX}/pilon/${PREFIX}.fasta -o ${PREFIX}/ragtag -w

### ASSEMBLY QC ###
# BBtools - general stats
#conda activate bbtools
#stats.sh ragtag.fasta

# QUAST
END
### 


